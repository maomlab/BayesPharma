---
title: "BayesPharma Homepage"
execute:
  eval: false
  keep-md: true
---


# Bayesian Pharmacology Modeling

Introduction
------------
The `BayesPharma` package contains a collection of R tools for analyzing
pharmacology data using Bayesian statistics and modeling. In comparison to
likelihood-based inference, `BayesPharma` builds on the `stan` ecosystem and
`brms` package. `BayesPharma` facilitates applying a principled Bayesian
workflow to to fit and analyze several foundational pharmacology models, such as
dose-response modeling, modeling Pnear and folding funnels from molecular
modeling, and modeling potential docking 'hit-rate' curves as a function of dock
score from ultra-large library docking
([Lyu et al. (2019)](https://www.nature.com/articles/s41586-019-0917-9),
[Alon et al. (2021)](https://www.nature.com/articles/s41586-021-04175-x)). 

Installation
------------

### Pre-requisites
Follow the instructions to install [rstan](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started)

### Install `BayesPharma`
In R do
```{r install-BayesPharma}
install.packages("remotes")
remotes::install_github("maomlab/BayesPharma")
```

Usage
-----
```{r load-data}
library(tidyverse)
library(BayesPharma)

data <- data.frame(
  response = ...,
  treatment = ...,
  <predictor columns>)
```
The predictor columns are typically treatment variables like `drug` or batch
variable like `well_id`.

To use the model to, for example fit a sigmoid agonist model:
```{r basic-sigmoid-model}
model <- BayesPharma::sigmoid_model(
   data = data,
   formula = BayesPharma::sigmoid_agoinst_formula(),
   prior = BayesPharma::sigmoid_agonsit_prior(),
   init = BayesPharma::sigmoid_agonist_init())
```
### Evaluate model fit

Once the model has been fit, to evaluate it 

#### Traceplot
```{r plot-traceplot}
model |> BayesPharma::traceplot()
```
#### Basic statistics
```{r print-basic-statistics}
model |> posterior::summarize_draws()
```
#### Regression plot
```{r plot-posterior-draws}
model |> BayesPharma::plot_posterior_draws()
```
#### Prior densities
```{r plot-prior-posterior-densities}
model |> BayesPharma::density_distributions()
model |> BayesPharma::posterior_densities()
model |> BayesPharma::prior_posterior_densities()
```
#### posterior predictive check
```{r plot-poterior-predictive-check}
#| eval: false
model |> brms::pp_check(type = "dens_overlay", ndraws = 50)
```

### compare model fits
```{r compare-models-with-loo}
#| eval: false
model <- model |> brms::add_loo_criterion()
model_fit_comparison <- brms::compare_models(model, model_alt)
```


